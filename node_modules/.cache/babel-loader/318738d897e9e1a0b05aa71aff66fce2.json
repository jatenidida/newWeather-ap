{"ast":null,"code":"var _jsxFileName = \"/Users/jatenidida/Desktop/weather-app/src/App.js\";\nimport React from \"react\";\nimport Titles from \"./components/Titles\";\nimport Form from \"./components/Form\";\nimport Weather from \"./components/Weahter\";\nconst API_KEY = \"e4fc0603b3aa74788cce8f69d0c06846\"; //wrapper component\n//This class creates an instance of a react component and the will name it App\n//It is also the major component\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&APPID=\").concat(API_KEY));\n      const data = await api_call.json();\n      console.log(data);\n    };\n  }\n\n  //It returns a JSX\n  render() {\n    //In JSX u can only return one pair of element\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Titles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Form, {\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n}\n\n; //Make this file (App) available to other files\n\nexport default App;","map":{"version":3,"sources":["/Users/jatenidida/Desktop/weather-app/src/App.js"],"names":["React","Titles","Form","Weather","API_KEY","App","Component","getWeather","e","preventDefault","city","target","elements","value","country","api_call","fetch","data","json","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAIA,MAAMC,OAAO,GAAG,kCAAhB,C,CAGA;AACA;AACA;;AACA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAiC;AAAA;AAAA;;AAAA,SAOjCC,UAPiC,GAOpB,MAAMC,CAAN,IAAY;AACvBA,MAAAA,CAAC,CAACC,cAAF;AAEA,YAAMC,IAAI,GAAGF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBF,IAAlB,CAAuBG,KAApC;AACA,YAAMC,OAAO,GAAGN,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBE,OAAlB,CAA0BD,KAA1C;AAEA,YAAME,QAAQ,GAAG,MAAMC,KAAK,4DAAqDN,IAArD,cAA6DI,OAA7D,oBAA8EV,OAA9E,EAA5B;AAEA,YAAMa,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,KAlBgC;AAAA;;AAqBjC;AACAI,EAAAA,MAAM,GAAE;AAEN;AACE,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAIE,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAI,KAAKd,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAME,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAYD;;AArC8B;;AAuChC,C,CAED;;AACA,eAAeF,GAAf","sourcesContent":["import React from \"react\";\n\nimport Titles from \"./components/Titles\"\nimport Form from \"./components/Form\"\nimport Weather from \"./components/Weahter\"\n\n\n\nconst API_KEY = \"e4fc0603b3aa74788cce8f69d0c06846\";\n\n\n//wrapper component\n//This class creates an instance of a react component and the will name it App\n//It is also the major component\nclass App extends React.Component{\n\n  //Defining a method that would be passed to forms to submit data\n  // data about city and country that we want to get data about\n\n  //we will pass e to the funtion, e is just an event we are going to use to avoid the full page refresh\n  //\ngetWeather = async(e) => {\n  e.preventDefault();\n\n  const city = e.target.elements.city.value;\n  const country = e.target.elements.country.value;\n\n  const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=${API_KEY}`);\n\n  const data = await api_call.json();\n\n  console.log(data);\n}\n\n\n//It returns a JSX\nrender(){\n\n  //In JSX u can only return one pair of element\n    return (\n      <div>\n        <Titles />\n\n      \n        <Form getWeather = {this.getWeather}/>\n\n        <Weather />\n\n      </div>\n    );\n\n  }\n\n};\n\n//Make this file (App) available to other files\nexport default App;"]},"metadata":{},"sourceType":"module"}