{"ast":null,"code":"var _jsxFileName = \"/Users/jatenidida/Desktop/weather-app/src/App.js\";\nimport React from \"react\";\nimport Titles from \"./components/Titles\";\nimport Form from \"./components/Form\";\nimport Weather from \"./components/Weahter\";\nconst API_KEY = \"e4fc0603b3aa74788cce8f69d0c06846\"; //wrapper component\n//This class creates an instance of a react component and the will name it App\n//It is also the major component\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temprature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined //Defining a method that would be passed to forms to submit data\n      // data about city and country that we want to get data about\n      //we will pass e to the funtion, e is just an event we are going to use to avoid the full page refresh\n\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&APPID=\").concat(API_KEY));\n      const data = await api_call.json();\n      console.log(data); //If a value is entered only, fetch the data\n\n      if (city && country) {\n        //upon submitting the form, this data will be grabbed from the api\n        this.setState({\n          temprature: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          error: \"\"\n        });\n      }\n    };\n  }\n\n  //It returns a JSX\n  render() {\n    //In JSX u can only return one pair of element\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Titles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Form, {\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temprature: this.state.temprature,\n      city: this.state.city,\n      country: this.state.country,\n      humidity: this.state.humidity,\n      description: this.state.description,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }\n\n}\n\n; //Make this file (App) available to other files\n\nexport default App;","map":{"version":3,"sources":["/Users/jatenidida/Desktop/weather-app/src/App.js"],"names":["React","Titles","Form","Weather","API_KEY","App","Component","state","temprature","undefined","city","country","humidity","description","error","getWeather","e","preventDefault","target","elements","value","api_call","fetch","data","json","console","log","setState","main","temp","name","sys","weather","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAIA,MAAMC,OAAO,GAAG,kCAAhB,C,CAGA;AACA;AACA;;AAKA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAO/BC,KAP+B,GAOvB;AAENC,MAAAA,UAAU,EAAEC,SAFN;AAGNC,MAAAA,IAAI,EAACD,SAHC;AAINE,MAAAA,OAAO,EAAEF,SAJH;AAKNG,MAAAA,QAAQ,EAAEH,SALJ;AAMNI,MAAAA,WAAW,EAAEJ,SANP;AAONK,MAAAA,KAAK,EAAEL,SAPD,CAWR;AACA;AAEA;;AAdQ,KAPuB;;AAAA,SAuBjCM,UAvBiC,GAuBpB,MAAMC,CAAN,IAAY;AACvBA,MAAAA,CAAC,CAACC,cAAF;AAEA,YAAMP,IAAI,GAAGM,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBT,IAAlB,CAAuBU,KAApC;AACA,YAAMT,OAAO,GAAGK,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBR,OAAlB,CAA0BS,KAA1C;AAEA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,4DAAqDZ,IAArD,cAA6DC,OAA7D,oBAA8EP,OAA9E,EAA5B;AAEA,YAAMmB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAVuB,CAYvB;;AACA,UAAIb,IAAI,IAAIC,OAAZ,EAAoB;AACpB;AACA,aAAKgB,QAAL,CAAc;AAEZnB,UAAAA,UAAU,EAAEe,IAAI,CAACK,IAAL,CAAUC,IAFV;AAGZnB,UAAAA,IAAI,EAAEa,IAAI,CAACO,IAHC;AAIZnB,UAAAA,OAAO,EAAEY,IAAI,CAACQ,GAAL,CAASpB,OAJN;AAKZC,UAAAA,QAAQ,EAACW,IAAI,CAACK,IAAL,CAAUhB,QALP;AAMZC,UAAAA,WAAW,EAACU,IAAI,CAACS,OAAL,CAAa,CAAb,EAAgBnB,WANhB;AAOZC,UAAAA,KAAK,EAAE;AAPK,SAAd;AASD;AAEA,KAjDgC;AAAA;;AAoDjC;AACAmB,EAAAA,MAAM,GAAE;AAEN;AACE,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAIE,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAI,KAAKlB,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAOE,oBAAC,OAAD;AACA,MAAA,UAAU,EAAE,KAAKR,KAAL,CAAWC,UADvB;AAEA,MAAA,IAAI,EAAI,KAAKD,KAAL,CAAWG,IAFnB;AAGA,MAAA,OAAO,EAAI,KAAKH,KAAL,CAAWI,OAHtB;AAIA,MAAA,QAAQ,EAAI,KAAKJ,KAAL,CAAWK,QAJvB;AAKA,MAAA,WAAW,EAAI,KAAKL,KAAL,CAAWM,WAL1B;AAMA,MAAA,KAAK,EAAK,KAAKN,KAAL,CAAWO,KANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAoBD;;AA5E8B;;AA8EhC,C,CAED;;AACA,eAAeT,GAAf","sourcesContent":["import React from \"react\";\n\nimport Titles from \"./components/Titles\"\nimport Form from \"./components/Form\"\nimport Weather from \"./components/Weahter\"\n\n\n\nconst API_KEY = \"e4fc0603b3aa74788cce8f69d0c06846\";\n\n\n//wrapper component\n//This class creates an instance of a react component and the will name it App\n//It is also the major component\n\n\n\n\nclass App extends React.Component{\n\n\n//State is an object that lives in an object,\n// Interaction with the user that's causing the app to change, when something is clicked or\n//changed. It also contains key value pairs\n\n  state = {\n\n    temprature: undefined,\n    city:undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    error: undefined\n\n\n  }\n  //Defining a method that would be passed to forms to submit data\n  // data about city and country that we want to get data about\n\n  //we will pass e to the funtion, e is just an event we are going to use to avoid the full page refresh\n\ngetWeather = async(e) => {\n  e.preventDefault();\n\n  const city = e.target.elements.city.value;\n  const country = e.target.elements.country.value;\n\n  const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=${API_KEY}`);\n\n  const data = await api_call.json();\n\n  console.log(data);\n\n  //If a value is entered only, fetch the data\n  if (city && country){\n  //upon submitting the form, this data will be grabbed from the api\n  this.setState({\n\n    temprature: data.main.temp,\n    city: data.name,\n    country: data.sys.country,\n    humidity:data.main.humidity,\n    description:data.weather[0].description,\n    error: \"\"\n  });\n}\n\n}\n\n\n//It returns a JSX\nrender(){\n\n  //In JSX u can only return one pair of element\n    return (\n      <div>\n        <Titles />\n\n      \n        <Form getWeather = {this.getWeather}/>\n\n      \n        <Weather \n        temprature={this.state.temprature}\n        city = {this.state.city}\n        country = {this.state.country}\n        humidity = {this.state.humidity}\n        description = {this.state.description}\n        error  = {this.state.error}\n        />\n\n      </div>\n    );\n\n  }\n\n};\n\n//Make this file (App) available to other files\nexport default App;"]},"metadata":{},"sourceType":"module"}